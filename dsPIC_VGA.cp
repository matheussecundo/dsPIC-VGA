#line 1 "C:/Git/dsPIC-VGA/dsPIC_VGA.c"
#line 24 "C:/Git/dsPIC-VGA/dsPIC_VGA.c"
const unsigned int update_frame = ( 600  *  60  *  0.2 );

unsigned int current_vertical_line = 0;
#line 1 "c:/git/dspic-vga/macros.h"
#line 1 "c:/git/dspic-vga/utils.h"
#line 23 "c:/git/dspic-vga/utils.h"
void rotateL(unsigned char *start, unsigned char *end)
{
 unsigned char aux;
 aux = *start;
 while (start < end)
 {
 *start = *(start + 1);
 start++;
 }
 *end = aux;
}

void rotateR(unsigned char *start, unsigned char *end)
{
 unsigned char aux;
 aux = *end;
 while (start < end)
 {
 *end = *(end - 1);
 end--;
 }
 *start = aux;
}

void fill(unsigned char *data0, unsigned int size, unsigned char value)
{
 unsigned int i;
 for (i = 0; i < size; i++) data0[i] = value;
}

void copy(unsigned char *data0, unsigned char *destination, unsigned int size)
{
 unsigned int i;
 for (i = 0; i < size; i++) destination[i] = data0[i];
}

char compare(unsigned char *data0, unsigned char *data1, unsigned int size)
{
 unsigned int i;
 for (i = 0; i < size; i++)
 {
 if (data0[i] != data1[i]) {
 if (data0[i] < data1[i]) {
 return -1;
 } else {
 return 1;
 }
 }
 }
 return 0;
}

void toupper_str(unsigned char *str)
{
 while (*str)
 {
 *str = toupper(*str);
 str++;
 }
}
#line 1 "c:/git/dspic-vga/matrix.h"
const unsigned short matrix_default[ 30  *  40 ] =
{
 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
 4,4,4,0,0,4,0,0,4,4,4,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 4,0,0,0,0,4,0,0,0,0,4,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 4,4,4,0,0,4,0,0,0,4,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,4,0,0,4,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 4,4,4,0,0,4,0,0,4,4,4,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
};

unsigned short matrix[ 30  *  40 ];
#line 37 "C:/Git/dsPIC-VGA/dsPIC_VGA.c"
void config()
{
 ADPCFG = 0xFFFF;

 PORTB=0;
 PORTD=0;

 PORTF=0;

 TRISB = 0xf;
 TRISD = 0;

 TRISF = 0;
}
#line 103 "C:/Git/dsPIC-VGA/dsPIC_VGA.c"
 void Draw_0 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[0 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_1 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[1 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_2 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[2 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_3 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[3 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_4 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[4 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_5 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[5 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_6 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[6 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_7 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[7 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_8 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[8 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_9 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[9 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_10 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[10 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_11 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[11 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_12 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[12 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_13 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[13 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_14 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[14 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_15 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[15 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_16 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[16 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_17 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[17 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_18 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[18 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_19 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[19 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_20 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[20 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_21 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[21 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_22 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[22 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_23 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[23 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_24 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[24 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_25 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[25 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_26 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[26 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_27 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[27 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_28 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[28 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 
 void Draw_29 () {    asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 0]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 0] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 2]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 2] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 4]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 4] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 6]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 6] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 8]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 8] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 10]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 10] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 12]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 12] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 14]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 14] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 16]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 16] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 18]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 18] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 20]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 20] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 22]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 22] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 24]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 24] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 26]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 26] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 28]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 28] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 30]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 30] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 32]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 32] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 34]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 34] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 36]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 36] >> 8; asm {nop;}  asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 38]; asm {nop;}  LATD  = *(unsigned int *)&matrix[29 * 40  + 38] >> 8; asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  LATD  = 0; current_vertical_line++;      asm {nop;} } 

void NullDraw() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   


  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} ;
}

void HSync_nops() {
     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 
}
#line 1 "c:/git/dspic-vga/numbers.h"


const unsigned short numbers[16][15] =
{
 {
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 ,0, 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 ,0,
 0, 6 ,0,
 0, 6 ,0,
 0, 6 ,0,
 0, 6 ,0
 },
 {
  6 , 6 , 6 ,
 0,0, 6 ,
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
 0,0, 6 ,
  6 , 6 , 6 ,
 0,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 ,0, 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 ,
 0,0, 6 ,
 0,0, 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 ,
 0,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0, 6 ,
 0,0, 6 ,
 0,0, 6 ,
 0,0, 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 ,
 0,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 ,0, 6 
 },
 {
  6 ,0,0,
  6 ,0,0,
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0,0,
  6 ,0,0,
  6 ,0,0,
  6 , 6 , 6 
 },
 {
 0,0, 6 ,
 0,0, 6 ,
  6 , 6 , 6 ,
  6 ,0, 6 ,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 
 },
 {
  6 , 6 , 6 ,
  6 ,0,0,
  6 , 6 , 6 ,
  6 ,0,0,
  6 ,0,0
 }
};
#line 1 "c:/git/dspic-vga/snake.h"


struct SNAKE {
 unsigned short * ipos;
 short idir;
 short idirx;
 short idiry;
 unsigned short * fpos;
 short fdir;
 short fdirx;
 short fdiry;
 unsigned short * apple_pos;
 unsigned int apple_qtd;
} snake;
#line 154 "C:/Git/dsPIC-VGA/dsPIC_VGA.c"
unsigned short number = 0;
unsigned int start = 0;

void NullDraw0() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


 number = snake.apple_qtd & 0x00f;
 *&matrix[1026 + 0 *  40  + 0] = numbers[number][0];
 *&matrix[1026 + 0 *  40  + 1] = numbers[number][1];
 *&matrix[1026 + 0 *  40  + 2] = numbers[number][2];
 *&matrix[1026 + 1 *  40  + 0] = numbers[number][3];
 *&matrix[1026 + 1 *  40  + 1] = numbers[number][4];
 *&matrix[1026 + 1 *  40  + 2] = numbers[number][5];
 *&matrix[1026 + 2 *  40  + 0] = numbers[number][6];
 *&matrix[1026 + 2 *  40  + 1] = numbers[number][7];
 *&matrix[1026 + 2 *  40  + 2] = numbers[number][8];
 *&matrix[1026 + 3 *  40  + 0] = numbers[number][9];
 *&matrix[1026 + 3 *  40  + 1] = numbers[number][10];
 *&matrix[1026 + 3 *  40  + 2] = numbers[number][11];
 *&matrix[1026 + 4 *  40  + 0] = numbers[number][12];
 *&matrix[1026 + 4 *  40  + 1] = numbers[number][13];
 *&matrix[1026 + 4 *  40  + 2] = numbers[number][14];
     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;} 



  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} ;
}

void NullDraw1() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


 number = (snake.apple_qtd & 0x0f0) >> 4;
 *&matrix[1022 + 0 *  40  + 0] = numbers[number][0];
 *&matrix[1022 + 0 *  40  + 1] = numbers[number][1];
 *&matrix[1022 + 0 *  40  + 2] = numbers[number][2];
 *&matrix[1022 + 1 *  40  + 0] = numbers[number][3];
 *&matrix[1022 + 1 *  40  + 1] = numbers[number][4];
 *&matrix[1022 + 1 *  40  + 2] = numbers[number][5];
 *&matrix[1022 + 2 *  40  + 0] = numbers[number][6];
 *&matrix[1022 + 2 *  40  + 1] = numbers[number][7];
 *&matrix[1022 + 2 *  40  + 2] = numbers[number][8];
 *&matrix[1022 + 3 *  40  + 0] = numbers[number][9];
 *&matrix[1022 + 3 *  40  + 1] = numbers[number][10];
 *&matrix[1022 + 3 *  40  + 2] = numbers[number][11];
 *&matrix[1022 + 4 *  40  + 0] = numbers[number][12];
 *&matrix[1022 + 4 *  40  + 1] = numbers[number][13];
 *&matrix[1022 + 4 *  40  + 2] = numbers[number][14];
     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   



  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} ;
}

void NullDraw2() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


 number = snake.apple_qtd >> 8;
 *&matrix[1018 + 0 *  40  + 0] = numbers[number][0];
 *&matrix[1018 + 0 *  40  + 1] = numbers[number][1];
 *&matrix[1018 + 0 *  40  + 2] = numbers[number][2];
 *&matrix[1018 + 1 *  40  + 0] = numbers[number][3];
 *&matrix[1018 + 1 *  40  + 1] = numbers[number][4];
 *&matrix[1018 + 1 *  40  + 2] = numbers[number][5];
 *&matrix[1018 + 2 *  40  + 0] = numbers[number][6];
 *&matrix[1018 + 2 *  40  + 1] = numbers[number][7];
 *&matrix[1018 + 2 *  40  + 2] = numbers[number][8];
 *&matrix[1018 + 3 *  40  + 0] = numbers[number][9];
 *&matrix[1018 + 3 *  40  + 1] = numbers[number][10];
 *&matrix[1018 + 3 *  40  + 2] = numbers[number][11];
 *&matrix[1018 + 4 *  40  + 0] = numbers[number][12];
 *&matrix[1018 + 4 *  40  + 1] = numbers[number][13];
 *&matrix[1018 + 4 *  40  + 2] = numbers[number][14];
     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;} 



  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} ;
}

void NullDraw3() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


 start = start | PORTB;
   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 


  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} ;
}

void snakeInit() {
 copy(matrix_default, matrix,  30  *  40 );

 snake.apple_pos = &matrix[5 *  40  + 19];
 *snake.apple_pos = 5;
 snake.apple_qtd = 0;
 snake.ipos = &matrix[20 *  40  + 19];
 snake.fpos = &matrix[21 *  40  + 19];
 *snake.ipos = 0b10010001;
 *snake.fpos = 0b10010001;
 snake.idir = 0b1001;
 snake.idirx = 0;
 snake.idiry = -1;
 snake.fdir = 0b1001;
 snake.fdirx = 0;
 snake.fdiry = -1;

 start = 0;
}

void SNAKE_NullDraw_less_2_final_cycle() {

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 



 if (start != 0) {

 if (current_vertical_line >= update_frame) {


 if (PORTBbits.RB0 && snake.idirx != 1) {
 snake.idir = 0b0110;
 snake.idirx = -1;
 snake.idiry = 0;
 *snake.ipos = (*snake.ipos & 0xf) | 0b01100000;
     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 
 } else if (PORTBbits.RB1 && snake.idiry != 1) {
 snake.idir = 0b1001;
 snake.idirx = 0;
 snake.idiry = -1;
 *snake.ipos = (*snake.ipos & 0xf) | 0b10010000;
     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   
 } else if (PORTBbits.RB2 && snake.idirx != -1) {
 snake.idir = 0b1110;
 snake.idirx = 1;
 snake.idiry = 0;
 *snake.ipos = (*snake.ipos & 0xf) | 0b11100000;
     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;} 
 } else if (PORTBbits.RB3 && snake.idiry != -1) {
 snake.idir = 0b1011;
 snake.idirx = 0;
 snake.idiry = 1;
 *snake.ipos = (*snake.ipos & 0xf) | 0b10110000;
       asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 
 } else {
 snake.idir = (*snake.ipos) >> 4;
 snake.idirx = (snake.idir >> 2) - 2;
 snake.idiry = (snake.idir & 0x3) - 2;
 }



 snake.fdir = (*snake.fpos) >> 4;
 snake.fdirx = (snake.fdir >> 2) - 2;
 snake.fdiry = (snake.fdir & 0x3) - 2;



 current_vertical_line = 0;



 snake.ipos = snake.ipos + snake.idiry *  40  + snake.idirx;



 if ((*snake.ipos & 0x7) == 1) {

 snakeInit();
 return;

 }



 if (*snake.ipos == 7) {

 snakeInit();
 return;

 }



 if (*snake.ipos == 0) {

 *snake.fpos = 0;

 snake.fpos = snake.fpos + snake.fdiry *  40  + snake.fdirx;

 } else {

       asm {nop;}  asm {nop;}  asm {nop;} 

     asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   

 }



 *snake.ipos = (snake.idir << 4) | 1;


     asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   
 } else {
 if (*snake.apple_pos != 5) {
 int index = rand() % ( ( 30  * 40 )  - 200);
 while (matrix[index] != 0)
 {
 index = rand() % ( ( 30  * 40 )  - 200);
 }
 snake.apple_pos = &matrix[index];
 *snake.apple_pos = 5;
 snake.apple_qtd++;
 }
   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 
 }

 } else {

   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;} asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}   asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;}  asm {nop;} 

 }



  LATD  = 0;       asm {nop;}  asm {nop;}  asm {nop;} 
}

int main()
{
 config();
 snakeInit();

 while(1) {

  LATFbits.LATF1  = 0 ;
  LATFbits.LATF0  = 0 ; HSync_nops(); LATFbits.LATF0  = 1 ;  NullDraw0();
  LATFbits.LATF0  = 0 ; HSync_nops(); LATFbits.LATF0  = 1 ;  NullDraw1();
  LATFbits.LATF0  = 0 ; HSync_nops(); LATFbits.LATF0  = 1 ;  NullDraw2();
  LATFbits.LATF0  = 0 ; HSync_nops(); LATFbits.LATF0  = 1 ;  NullDraw3();
  LATFbits.LATF1  = 1 ;


     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();   LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; NullDraw(); 


     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_0();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_1();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_2();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_3();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_4();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_5();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_6();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_7();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_8();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_9();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_10();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_11();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_12();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_13();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_14();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_15();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_16();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_17();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_18();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_19();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_20();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_21();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_22();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_23();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_24();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_25();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_26();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_27();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_28();   
     LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29(); LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();  LATFbits.LATF0 = 0; HSync_nops(); LATFbits.LATF0 = 1; Draw_29();   



  LATFbits.LATF0  = 0 ; HSync_nops(); LATFbits.LATF0  = 1 ;  SNAKE_NullDraw_less_2_final_cycle();
 }
}
